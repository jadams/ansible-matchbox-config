---
- name: resolve platform specific vars
  include_vars: '{{ item }}'
  with_first_found:
    - files:
        - '{{ ansible_distribution }}-{{ ansible_distribution_release }}.yml'
        - '{{ ansible_distribution }}.yml'
        - '{{ ansible_os_family }}.yml'
      skip: true
      paths:
        - '{{ role_path }}/vars'

- name: create matchbox group
  become: yes
  become_user: root
  group:
    name: '{{ matchbox_config_group }}'
    state: present

- name: create matchbox user
  become: yes
  become_user: root
  user:
    name: '{{ matchbox_config_user }}'
    group: '{{ matchbox_config_group }}'
    state: present

- name: create matchbox data-dir
  become: yes
  become_user: root
  with_items:
    - '{{ matchbox_config_data_path }}'
    - '{{ matchbox_config_assets_path }}'
    - '{{ matchbox_config_etc }}'
  file:
    path: '{{ item }}'
    state: directory
    owner: '{{ matchbox_config_user }}'
    group: '{{ matchbox_config_group }}'
    mode: 0755

- name: install keys/certs
  when: matchbox_config_tls.enable
  include_role:
    name: andrewrothstein.tls
  vars:
    tls_become: yes
    tls_become_user: root
    tls_src: '{{ matchbox_config_tls.pki_dir }}'
    tls_dest: '{{ matchbox_config_etc }}'
    tls_dest_file_names:
      ca: ca.crt
      cert: server.crt
      key: server.key
    tls_dest_chmod:
      owner: root
      grp: root

- name: configure matchbox environment
  become: yes
  become_user: root
  template:
    src: matchbox.env.j2
    dest: '{{ matchbox_config_env_file }}'
    owner: '{{ matchbox_config_user }}'
    group: '{{ matchbox_config_group }}'
    mode: '0400'

- name: install fedora coreos kernel binary assets
  become: yes
  become_user: '{{ matchbox_config_user }}'
  with_items: '{{ matchbox_config_get_coreos | default([]) }}'
  command: '{{ matchbox_config_get_coreos_bin }} {{ item.channel }} {{ item.version }} {{ matchbox_config_assets_path }}'
  args:
    creates: '{{ matchbox_config_assets_path }}/fedora-coreos/fedora-coreos-{{ item.version }}-metal.x86_64.raw.xz'

- name: install flatcar kernel binary assets
  become: yes
  become_user: '{{ matchbox_config_user }}'
  with_items: '{{ matchbox_config_get_flatcar | default([]) }}'
  command: '{{ matchbox_config_get_flatcar_bin }} {{ item.channel }} {{ item.version }} {{ matchbox_config_assets_path }}'
  args:
    creates: '{{ matchbox_config_assets_path }}/flatcar/{{ item.version }}/flatcar_production_pxe_image.cpio.gz'

- include_tasks: '{{ matchbox_supervisor | default("systemd") }}.yml'
